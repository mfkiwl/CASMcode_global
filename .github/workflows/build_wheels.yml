name: Build wheels

on:
  # Trigger on pull requests.
  # pull_request:

  # Trigger on version tags. This prevents building commits
  # twice when the pull request source branch is in the same repository.
  push:
    tags:
     - "v*"
     - "test*"

  # Trigger on request.
  workflow_dispatch:


jobs:
  build_wheels_linux_x86_64:
    name: Build x86_64 wheels on ubuntu-22.04
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.14.1
        env:
          CIBW_ARCHS_LINUX: x86_64

      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./wheelhouse/*.whl

  build_wheels_linux_aarch64:
    name: Build aarch64 wheels on ubuntu-22.04
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.14.1
        env:
          CIBW_ARCHS_LINUX: aarch64

      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./wheelhouse/*.whl

  build_wheels_macos_x86_64:
    name: Build x86_64 wheels on macos-12
    runs-on: macos-12

    steps:
      - uses: actions/checkout@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.14.1
        env:
          CIBW_ARCHS_MACOS: x86_64

      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./wheelhouse/*.whl

  build_wheels_macos_arm64:
    name: Build arm64 wheels on macos-12
    runs-on: macos-12

    steps:
      - uses: actions/checkout@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.14.1
        env:
          CIBW_ARCHS_MACOS: arm64
          CIBW_TEST_SKIP: "*-macosx_arm64"

      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Set up requirements and configuration variables
        run: |
          sudo apt-get update
          sudo apt-get install build-essential cmake
          pip install --upgrade pip wheel build
          git submodule update --init --recursive

      - name: make
        shell: bash
        run: |
          python -m build

      - name: upload sdist
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/*.tar.gz

  upload_pypi:
    name: Publish [PyPI]
    needs: [build_wheels_linux_x86_64, build_wheels_linux_aarch64, build_wheels_macos_x86_64, build_wheels_macos_arm64, build_sdist]
    runs-on: ubuntu-latest
    # Specifying a GitHub environment is optional, but strongly encouraged
    # environment: release
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3.0.2
        with:
          name: dist
          path: dist

      - name: Check files
        run: ls -lR dist

      - name: Upload to PyPI
        # upload to PyPI on every tag starting with 'v'
        if: startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@v1.8.8

      - name: Publish package distributions to TestPyPI
        # otherwise, upload to TestPyPi
        if: ${{ !startsWith(github.ref, 'refs/tags/v') && (github.event_name != 'pull_request' || (github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]')) }}
        uses: pypa/gh-action-pypi-publish@v1.8.8
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
